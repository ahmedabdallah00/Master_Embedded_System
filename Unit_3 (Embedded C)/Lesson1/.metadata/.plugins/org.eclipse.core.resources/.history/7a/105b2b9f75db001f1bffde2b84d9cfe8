/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdio.h>


#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

/*Register address*/

typedef union {
	uint32_t all_pins;
	struct{
		uint32_t pin0:1;
		uint32_t pin1:1;
		uint32_t pin2:1;
		uint32_t pin3:1;
		uint32_t pin4:1;
		uint32_t pin5:1;
		uint32_t pin6:1;
		uint32_t pin7:1;
		uint32_t pin8:1;
		uint32_t pin9:1;
		uint32_t pin10:1;
		uint32_t pin11:1;
		uint32_t pin12:1;
		uint32_t pin13:1;
		uint32_t pin14:1;
		uint32_t pin15:1;
		uint32_t pin16:1;
		uint32_t pin17:1;
		uint32_t pin18:1;
		uint32_t pin19:1;
		uint32_t pin20:1;
		uint32_t pin21:1;
		uint32_t pin22:1;
		uint32_t pin23:1;
		uint32_t pin24:1;
	};
} reg;

#define RCC_BASE   0x40021000
#define PORTA_BASE 0x40010800

volatile  reg* APB2ENR = (volatile  reg*)(RCC_base_add+0X18);
volatile  reg* CHR = (volatile  reg*)(GPIO_base_add+0X04);
volatile  reg* ODR = (volatile  reg*)(GPIO_base_add+0X0C);


int main(void)
{
	RCC_APB2ENR |= 1<<2;

	while(1)
	{
		GPIOA_ODR |= 1<<13;
		for(i=0;i<50000;i++);
		GPIOA_ODR |= 1<<13;
		for(i=0;i<50000;i++);
	}
	/* Loop forever */
	for(;;);
}
